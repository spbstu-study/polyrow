from telegram import Update, Message
from telegram.ext import ConversationHandler, CommandHandler, MessageHandler, filters, ContextTypes

from tgbot.database import DBUser
from tgbot.interface.menu import start_user_menu
from tgbot.handlers.commands import cancel
from tgbot.states import UserStates
from tgbot.json import get_recommendation
from config import MAX_NUMBER_OF_TRAINING_DAYS, MIN_NUMBER_OF_TRAINING_DAYS, URL_FORMS


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message: Message = update.message 

    await message.reply_text(
        'üö£ –ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç Polyrow, –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –ø–æ –≥—Ä–µ–±–ª–µ!'
    )

    telegram_id: int = message.from_user.id 
    if DBUser.contains_user(telegram_id):
        if DBUser.get_user(telegram_id).is_admin:
            await message.reply_text('üíÜ‚Äç‚ôÇÔ∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            DBUser.set_admin(telegram_id, set=False)
        await start_user_menu(update, context)
        
        return ConversationHandler.END
    
    await message.reply_text(
        'üìã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –º–Ω–µ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Å.\n'
        '–î–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /cancel.'
    )

    await message.reply_text('1Ô∏è‚É£ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:')

    return UserStates.TYPING_LAST_NAME


async def receive_last_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message: Message = update.message 

    context.user_data['last_name'] = message.text.strip() 

    await message.reply_text('2Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:')
    
    return UserStates.TYPING_FIRST_NAME


async def receive_first_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message: Message = update.message 

    context.user_data['first_name'] = message.text.strip() 

    await message.reply_text(f'3Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª–µ –æ—Ç {MIN_NUMBER_OF_TRAINING_DAYS} –¥–æ {MAX_NUMBER_OF_TRAINING_DAYS}:')

    return UserStates.TYPING_DAYS


async def receive_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message: Message = update.message 

    try:
        number_training_days = int(update.message.text.strip()) 
    except ValueError:
        await message.reply_text(
            'ü•¥ –û–π! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ –ø–æ–Ω—è–ª–∏.\n'
            '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –æ–∑–Ω–∞—á–∞—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª–µ.'
        )

        return UserStates.TYPING_DAYS
    
    if number_training_days not in range(MIN_NUMBER_OF_TRAINING_DAYS, MAX_NUMBER_OF_TRAINING_DAYS + 1):
        await message.reply_text(
            'ü•¥ –û–π! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ –ø–æ–Ω—è–ª–∏.\n'
            f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç {MIN_NUMBER_OF_TRAINING_DAYS} –¥–æ {MAX_NUMBER_OF_TRAINING_DAYS}.'
        )
        
        await message.reply_text('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:')

        return UserStates.TYPING_DAYS 

    DBUser.create_user(
        telegram_id=message.from_user.id, 
        first_name=context.user_data['first_name'], 
        last_name=context.user_data['last_name'], 
        number_training_days=number_training_days
    )

    await message.reply_text('üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.')
    await message.reply_text(f'üìÉ –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É: {URL_FORMS}.')

    recommendation = get_recommendation(number_training_days)
    if recommendation is None:
        recommendation = 'ü•¥ –£–ø—Å! –¢—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º, –Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç—Ä–µ–Ω–µ—Ä—É.'
        # TODO: "...–∫ —Ç—Ä–µ–Ω–µ—Ä—É –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É." –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–µ—Ç–æ–º –≤ –∫–Ω–æ–ø–∫–µ FAQ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞—Ö –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Å –Ω–∏–º–∏
    
    await message.reply_text(
        'ü§© –ö—Å—Ç–∞—Ç–∏! –î–µ—Ä–∂–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é!\n'
        '–û–Ω–∞ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫ –≤–∞–º –ª—É—á—à–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏!\n'
        '–ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, –µ—Å–ª–∏ –µ–µ –∑–∞–±—É–¥–µ—Ç–µ, –≤—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –µ—ë –≤...' # TODO: –î–æ–ø–∏—Å–∞—Ç—å, –≥–¥–µ –Ω–∞–π—Ç–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
    )
    await message.reply_markdown_v2(f'–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º \(–¥–Ω–µ–π –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {number_training_days}\):\n```\n{recommendation}\n```')
    
    await start_user_menu(update, context)

    return ConversationHandler.END


auth_handler = ConversationHandler(
    entry_points=[CommandHandler('start', start)],
    states={
        UserStates.TYPING_FIRST_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_first_name)],
        UserStates.TYPING_LAST_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_last_name)],
        UserStates.TYPING_DAYS: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_date)],
    },
    fallbacks=[CommandHandler('cancel', cancel)]
)